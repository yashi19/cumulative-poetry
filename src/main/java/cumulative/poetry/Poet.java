/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cumulative.poetry;

import cumulative.poetry.common.AppConstants;
import cumulative.poetry.common.InputHandler;
import cumulative.poetry.models.Poetry;

import java.util.Map;

public class Poet {

    private Map<Integer, Poetry> mapOfPoetries;

    public Poet(){
        mapOfPoetries = new InputHandler().getPoetries();
    }

    public String recite() {
        StringBuilder poetryMessage = new StringBuilder();
        for(int day = 1; day <= mapOfPoetries.size(); day++){
                poetryMessage.append("Day "+day+ " - \n");
                poetryMessage.append(revealPoetryDayWise(day));
                poetryMessage.append('\n');
        }

        return poetryMessage.toString();
    }

    public String revealPoetryDayWise(int day){
        StringBuilder poetryMessage= new StringBuilder();
        if( day <= 0 ){
            return  AppConstants.INVALID_DAY_ARGUMENT;
        }
        poetryMessage.append(AppConstants.THIS_IS_STRING);
        for(int i = day ; i > 0 ; i--){
            poetryMessage.append(mapOfPoetries.get(i).getPoetryMessage());
            poetryMessage.append('\n');
        }
        return poetryMessage.toString();
    }
}
